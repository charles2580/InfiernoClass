// Fill out your copyright notice in the Description page of Project Settings.

#include "NS_SpawnHitBox.h"

void UNS_SpawnHitBox::NotifyBegin(USkeletalMeshComponent* MeshComp, UAnimSequenceBase* Animation, float TotalDuration, const FAnimNotifyEventReference& EventReference)
{

	// 스켈레탈 메시 컴포넌트의 월드 Transform을 가져오고 오프셋 적용
	FTransform MeshTransform = MeshComp->GetComponentTransform();
	MeshTransform.AddToTranslation(HitboxOffset);

	// Hitbox 액터를 SpawnActorDeferred로 생성
	AHitBox* Hitbox = MeshComp->GetWorld()->SpawnActorDeferred<AHitBox>(HitboxActorClass, MeshTransform);
	if (Hitbox)
	{
		// 에디터에서 설정한 값을 Hitbox 액터에 전달합니다.
		Hitbox->ColliderOffset = HitboxOffset;
		Hitbox->ColliderSize = HitboxSize;
		Hitbox->ColliderType = ColliderType;
		Hitbox->AttackType = AttackType;
		Hitbox->Damage = Damage;
		Hitbox->StunTime = StunTime;
		Hitbox->AirborneTime = AirborneTime;

		// Spawn을 완료
		Hitbox->FinishSpawning(MeshTransform);

		// 생성한 액터를 저장 (Notify End 시 제거)
		SpawnedHitboxActor = Hitbox;
	}
}

void UNS_SpawnHitBox::NotifyEnd(USkeletalMeshComponent* MeshComp, UAnimSequenceBase* Animation, const FAnimNotifyEventReference& EventReference)
{
	// Notify 종료 시 Spawn한 Hitbox 액터가 있다면 제거합니다.
	if (SpawnedHitboxActor)
	{
		SpawnedHitboxActor->Destroy();
		SpawnedHitboxActor = nullptr;
	}
}
